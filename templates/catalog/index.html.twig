{% extends 'base.html.twig' %}

{% block title %}Hello ProductBuyerController!{% endblock %}
{% block body %}
    <style>
        body {
            background: #E8E0D2;
            font-family: 'Montserrat', sans-serif;
            margin: 0;
            padding: 0;
        }
        .wrapper {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            grid-auto-flow: dense;
            grid-gap: 20px;
            margin: 6% auto 0;
            width: 90%;
        }

        .single-card {
            position: relative;
            max-width: 100%;
            margin: 0;
            box-shadow: 0 1px 10px rgba(189, 110, 122, 0.5);
            transition: box-shadow 0.3s ease;
            overflow: hidden;
            background: #E8E0D2;
            border-radius: 15px;
            transition: all 0.2s ease-in-out;
            display: flex;
            flex-direction: column;
        }

        .single-card:hover {
            transform: scale(1.05);
        }

        .img-area {
            position: relative;
            width: 100%;
            height: 250px;
            overflow: hidden;
        }

        .img-area img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100%;
            background-color: rgba(150, 150, 150, 0.4);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .single-card:hover .overlay {
            opacity: 1;
        }

        .add-to-fav, .remove-from-fav, .make-offer, .send-message {
            padding: 10px 15px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease;
            margin-bottom: 10px;
        }

        .add-to-fav:hover, .remove-from-fav:hover, .make-offer:hover, .send-message:hover {
            color: #ff0000;
        }

        .price {
            font-weight: bold;
            font-size: larger;
            color: #BD6E7A;
        }

        .info {
            display: flex;
            flex-direction: column;
            padding: 10px;
            color: rgba(0, 0, 0, 0.7);
            line-height: 25px;
        }

        .row1 {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .category-filter {
            margin: 20px 0;
        }
        .category-filter,
        .search-bar {
            display: flex;
            align-items: center;
        }

        .search-bar input {
            padding: 5px;
            font-size: 16px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .filter-bar{
            width: 90%;
            display: flex;
            flex-direction: row;
        }

        .modal{
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            max-width: 400px;
            text-align: center;
            z-index: 1001;
        }

        .modal input[type="range"] {
            width: 100%;
            margin: 15px 0;
        }

        .close-modal {
            margin-top: 10px;
            padding: 10px 15px;
            background-color: #BD6E7A;
            color: white;
            border: none;
            cursor: pointer;
        }

    </style>
    {% if catalogUser %}
        <h1 class="mb-4">
            {{user.username}}
            {% if bMe %}
                | {{user.wallet|number_format(2, '.', ' ')}} €
            {% endif %}
        </h1>
        {% if bMe %}
        <button onclick="window.location.href='{{ path('app_popup_product') }}'">Ajouter un produit</button>
        <button onclick="window.location.href='{{ path('app_account_page') }}'">Modifier Profil</button>
        <button onclick="window.location.href='{{ path('app_popup_product_billspdf') }}'">Télécharger commandes</button>
        {% endif %}
    {% endif %}
    <div class="filter-bar">
        <button id="show-favorites">Mes Favoris</button>
        <div class="sort-options">
            <label for="sort-select">Trier par</label>
            <select id="sort-select">
                <option value="relevance">Pertinence</option>
                <option value="price-ascended">Prix (Croissant)</option>
                <option value="price-descended">Prix (Décroissant)</option>
                <option value="popularity-ascended">Popularité (Croissant)</option>
                <option value="popularity-descended">Popularité (Décroissant)</option>
            </select>
        </div>
        <div class="category-filter">
            <label for="category-select">Filter</label>
            <select id="category-select">
                <option value="">All Categories</option>
                {% for category in categoryList %}
                    <option value="{{ category.id }}">{{ category.name }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="search-bar">
            <input type="text" id="search-input" placeholder="Search by title...">
        </div>
    </div>

    <div class="modal" id="offerModal">
        <div class="modal-content">
            <h2>Make an Offer</h2>
            <label for="offerPrice">Choose your offer:</label>
            <input type="range" id="offerPrice" min="1" max="100" step="0.5">
            <p>Your offer: <span id="priceOutput"></span> €</p>
            <button class="close-modal" id="submitOffer">Submit Offer</button>
            <button class="close-modal" id="offerCloseModal">Cancel</button>
        </div>
    </div>
    <div class="modal" id="messageModal">
        <div class="modal-content">
            <h2>Send a message</h2>
            <input type="text" id="messageSent">
            <button class="close-modal" id="submitMessage">Send message</button>
            <button class="close-modal" id="messageCloseModal">Cancel</button>
        </div>
    </div>
    <div class="wrapper">
        {% for product in productList %}
            {% if product.status %}
                <div  class="single-card" data-category-id="{{ product.categories.id }}">
                    <div class="img-area">
                        <img src="{{ product.imageUrl }}" alt="">
                        <div class="overlay">
                            {% if bMe %}
                            <td>
                                <button type="button" class="btn btn-sm btn-primary" onclick="window.location.href='{{ path('app_popup_product_edit', {'id': product.id}) }}'"> Modifie</button>
                                <button type="button" class="btn btn-sm btn-danger" onclick="if(confirm('Êtes-vous sûr de vouloir supprimer ce produit ?')) window.location.href='{{ path('app_popup_product_delete', {'id': product.id}) }}'"> Supprimer</button>
                            </td>
                            {% else %}
                                <button class="remove-from-fav" data-id="{{ product.id }}" {% if not FavoriteService.checkFav(product.id) %} style="display: none;" {% endif %}><svg xmlns="http://www.w3.org/2000/svg" height="25" width="25" viewBox="0 0 512 512"><path fill="#ff0000" d="M47.6 300.4L228.3 469.1c7.5 7 17.4 10.9 27.7 10.9s20.2-3.9 27.7-10.9L464.4 300.4c30.4-28.3 47.6-68 47.6-109.5v-5.8c0-69.9-50.5-129.5-119.4-141C347 36.5 300.6 51.4 268 84L256 96 244 84c-32.6-32.6-79-47.5-124.6-39.9C50.5 55.6 0 115.2 0 185.1v5.8c0 41.5 17.2 81.2 47.6 109.5z"/></svg></button>
                                <button class="add-to-fav" data-id="{{ product.id }}" {% if FavoriteService.checkFav(product.id) %} style="display: none;" {% endif %} ><svg xmlns="http://www.w3.org/2000/svg" height="25" width="25" viewBox="0 0 512 512"><path fill="#000000" d="M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8l0-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5l0 3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20-.1-.1s0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5l0 3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2l0-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z"/></svg></button>
                                <button class="send-message" data-id="{{ product.id }}">Send message</button>
                                <button class="make-offer" data-id="{{ product.id }}" data-price="{{ product.price }}">Make an offer</button>
                            {% endif %}
                        </div>
                    </div>
                    <div class="info">
                        <div class="row1">
                            <span class="price">{{ product.price|number_format(2, '.', ' ')}} €</span>
                            <span>❤️{{ product.fav }}</span>
                        </div>
                        <span data-product-title="{{ product.title }}">{{ product.title }}</span>
                        <span>{{ product.description }}</span>
                        <span data-user-username="{{ product.users.username }}">vendu par <a href="{{ path('app_user', {'id' : product.users.id}) }}">{{ product.users.username }}</a></span>

                    </div>
                </div>
            {% endif %}
        {% endfor %}
    </div>
    <script>
        document.getElementById('search-input').addEventListener('input', function() {
            const selectedTitle = this.value.toLowerCase();
            const cards = document.querySelectorAll('.single-card');

            cards.forEach(card => {
                const productTitle = card.querySelector('[data-product-title]').getAttribute('data-product-title').toLowerCase();
                const userUsername = card.querySelector('[data-user-username]').getAttribute('data-user-username').toLowerCase();

                if (selectedTitle === "" || productTitle.includes(selectedTitle) || userUsername.includes(selectedTitle)) {
                    card.style.display = "block";
                } else {
                    card.style.display = "none";
                }
            });
        });
        document.getElementById('category-select').addEventListener('change', function() {
            const selectedCategoryId = this.value;
            const cards = document.querySelectorAll('.single-card');

            cards.forEach(card => {
                const productCategoryId = card.getAttribute('data-category-id'); // Utilisez le bon attribut
                console.log(`Comparing ${productCategoryId} with ${selectedCategoryId}`); // Ajoutez ceci pour déboguer
                if (selectedCategoryId === "" || productCategoryId === selectedCategoryId) {
                    card.style.display = "block";
                } else {
                    card.style.display = "none";
                }
            });
        });
        document.querySelectorAll('.add-to-fav').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id');

                fetch(`/add-favorite/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ productId: productId })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Update button visibility
                            this.style.display = 'none'; // Hide add button
                            this.closest('.overlay').querySelector('.remove-from-fav').style.display = 'block'; // Show remove button
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });

        document.querySelectorAll('.remove-from-fav').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id');

                fetch(`/remove-favorite/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ productId: productId })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Update button visibility
                            this.style.display = 'none'; // Hide remove button
                            this.closest('.overlay').querySelector('.add-to-fav').style.display = 'block'; // Show add button
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
        document.querySelectorAll('.make-offer').forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-id');
                const productPrice = this.getAttribute('data-price');
                document.getElementById('offerModal').style.display = 'flex';

                const offerPriceInput = document.getElementById('offerPrice');
                offerPriceInput.max = productPrice;
                offerPriceInput.value = productPrice;

                document.getElementById('submitOffer').onclick = function() {
                    const offerPrice = document.getElementById('offerPrice').value;

                    fetch(`/submit-offer/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ productId: productId, offerPrice: offerPrice })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Offer submitted successfully!');
                            }
                        })
                        .catch(error => console.error('Error:', error));

                    document.getElementById('offerModal').style.display = 'none';
                };
            });
        });

        document.querySelectorAll('.send-message').forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-id');
                document.getElementById('messageModal').style.display = 'flex';

                document.getElementById('submitMessage').onclick = function() {
                    const messageInput = document.getElementById('messageSent').value;

                    fetch(`/send-message/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ productId: productId, sendMessage: messageInput })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Message sent successfully!');
                            }
                        })
                        .catch(error => console.error('Error:', error));

                    document.getElementById('messageModal').style.display = 'none';
                };
            });
        });

        document.getElementById('messageCloseModal').addEventListener('click', function() {
            document.getElementById('messageModal').style.display = 'none';
        });

        document.getElementById('offerCloseModal').addEventListener('click', function() {
            document.getElementById('offerModal').style.display = 'none';
        });

        document.getElementById('offerPrice').addEventListener('input', function() {
            document.getElementById('priceOutput').textContent = this.value;
        });

        let showingFavorites = false;

        document.getElementById('show-favorites').addEventListener('click', function() {
            showingFavorites = !showingFavorites; // Toggle the favorite view
            const cards = document.querySelectorAll('.single-card');

            cards.forEach(card => {
                const productId = card.querySelector('.add-to-fav').getAttribute('data-id');
                const isFavorite = card.querySelector('.remove-from-fav').style.display !== 'none'; // Check if the favorite button is hidden

                if (showingFavorites) {
                    if (isFavorite) {
                        card.style.display = "block"; // Show favorite cards
                    } else {
                        card.style.display = "none"; // Hide non-favorite cards
                    }
                } else {
                    card.style.display = "block"; // Show all cards
                }
            });
        });
        document.getElementById('sort-select').addEventListener('change', function() {
            const selectedOption = this.value;
            const cardsArray = Array.from(document.querySelectorAll('.single-card'));

            cardsArray.sort((a, b) => {
                const priceA = parseFloat(a.querySelector('.price').textContent.replace(',', '.'));
                const priceB = parseFloat(b.querySelector('.price').textContent.replace(',', '.'));
                const favA = parseInt(a.querySelector('span').textContent.replace('❤️', '').trim());
                const favB = parseInt(b.querySelector('span').textContent.replace('❤️', '').trim());

                switch (selectedOption) {
                    case 'price-ascended':
                        return priceA - priceB; // Prix croissant
                    case 'price-descended':
                        return priceB - priceA; // Prix décroissant
                    case 'popularity-ascended':
                        return favA - favB; // Popularité croissante
                    case 'popularity-descended':
                        return favB - favA; // Popularité décroissante
                    default:
                        return 0; // Pertinence (aucun tri)
                }
            });

            // Remplacez le contenu de l'élément wrapper avec les produits triés
            const wrapper = document.querySelector('.wrapper');
            wrapper.innerHTML = ''; // Effacez le contenu actuel

            // Ajoutez les produits triés à l'élément wrapper
            cardsArray.forEach(card => {
                wrapper.appendChild(card);
            });
        });


    </script>
{% endblock %}
